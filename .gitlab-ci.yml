variables:
  ROLLOUT_RESOURCE_TYPE: deployment
  POSTGRES_ENABLED: 'false'
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  K8S_SECRET_DJANGO_SETTINGS_MODULE: "tazboard.core.settings.docker_mocked"
  K8S_SECRET_DJANGO_SECRET_KEY: "dummysecret"

include:
  - template: Jobs/Build.gitlab-ci.yml
  - template: Jobs/Deploy.gitlab-ci.yml

stages:
  - test
  - assets
  - wheel
  - build
  - review
  - staging
  - canary
  - deploy
  - incremental rollout 10%
  - incremental rollout 25%
  - incremental rollout 50%
  - incremental rollout 100%
  - production
  - cleanup

frontend:lint:
  stage: test
  image: node:12
  before_script:
    - cd tazboard/frontend/static_src
    - npm ci --no-optional
  script:
    - npm run lint
  cache:
    paths:
      - tazboard/frontend/static_src/node_modules/

frontend:unit:
  stage: test
  image: node:12
  before_script:
    - cd tazboard/frontend/static_src
    - npm ci --no-optional
  script:
    - npm run test:unit -- --collectCoverage
  cache:
    paths:
      - tazboard/frontend/static_src/node_modules/
  artifacts:
    reports:
      cobertura: tazboard/frontend/static_src/coverage/cobertura-coverage.xml

frontend:e2e:
  image: registry.gitlab.alt.coop/ctrlaltcoop/docker-browser-testing/master:latest
  stage: test
  before_script:
    - cd tazboard/frontend/static_src
    - npm ci
  script:
    - CHROMEDRIVER_BIN=`which chromedriver` GECKODRIVER_BIN=`which geckodriver` npm run test:e2e -- -e firefox,chrome
  cache:
    paths:
      - tazboard/frontend/static_src/node_modules/

backend:lint:
  image: python:3
  stage: test
  before_script:
    - pip install poetry
    - poetry install
  script:
    - poetry run flake8
  cache:
    paths:
      - .venv


backend:test:
  image: python:3
  stage: test
  before_script:
    - pip install poetry
    - poetry install
  script:
    - DJANGO_SETTINGS_MODULE=tazboard.core.settings.test poetry run coverage run --source 'tazboard' tazboard/manage.py test
    - poetry run coverage xml
  cache:
    paths:
      - .venv
  artifacts:
    reports:
      cobertura: coverage.xml


frontend:build:
  image: node:12
  stage: assets
  before_script:
    - cd tazboard/frontend/static_src
    - npm ci --no-optional
  script:
    - VUE_APP_MOCK_ENABLED=true npm run build
  artifacts:
    paths:
      - tazboard/frontend/templates
      - tazboard/frontend/static/app

backend:build:
  image: python:3
  stage: wheel
  before_script:
    - pip install poetry
    - poetry install
  script:
    - poetry build
  cache:
    paths:
      - .venv
  artifacts:
    paths:
      - dist/
